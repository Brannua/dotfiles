"
" vimrc
"

let mapleader = ","
let g:auto_save = 1
let g:table_mode_corner='|'
let g:SnazzyTransparent = 1
let g:lightline = { 'colorscheme': 'wombat' }

" Install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
	silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
		\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

set runtimepath+=~/.vim

" Run PlugInstall if there are missing plugins
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
	\| PlugInstall --sync | source $MYVIMRC
\| endif

call plug#begin("~/.vim/plugged")
Plug 'dhruvasagar/vim-table-mode'
Plug 'iamcco/markdown-preview.nvim', { 'do': { -> mkdp#util#install() }, 'for': ['markdown', 'vim-plug']}
Plug 'gcmt/wildfire.vim'
Plug 'tpope/vim-surround'

Plug 'itchyny/lightline.vim'
Plug 'connorholyday/vim-snazzy'
Plug 'airblade/vim-gitgutter'
Plug '907th/vim-auto-save'
call plug#end()

syntax on
colorscheme snazzy
set cursorline
"highlight CursorLine cterm=NONE
"highlight CursorLineNr cterm=NONE

set number
set relativenumber

set scrolloff=10

set tabstop=2
set shiftwidth=2

set incsearch
set ignorecase
set smartcase
set hlsearch
exec "nohlsearch"

set wildmenu
set updatetime=0 " default is 4000ms.

set mouse=a

set laststatus=2
set noshowmode
set ttimeoutlen=0 " when press esc, back to normal-mode right away.

nnoremap s <nop>
nnoremap S :w<CR>
nnoremap Q :q<CR>
nnoremap R :source $MYVIMRC<CR>
nnoremap E :edit $MYVIMRC<CR>

nnoremap r :call Compiler()<CR>
func! Compiler()
	exec "w"
	if &filetype == "markdown"
		exec "MarkdownPreview"
	endif
endfunc

source ~/.config/vim/snippits.vim

